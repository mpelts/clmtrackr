{"name":"Clmtrackr","tagline":"Javascript library for precise tracking of facial features via Constrained Local Models","body":"clmtrackr\r\n======\r\n\r\n![tracked face](http://auduno.github.com/clmtrackr/media/clmtrackr_03.jpg)\r\n\r\n**clmtrackr** is a javascript library for fitting facial models to faces in videos or images. It currently is an implementation of *constrained local models* fitted by *regularized landmark mean-shift*, as described in [Jason M. Saragih's paper](http://dl.acm.org/citation.cfm?id=1938021). **clmtrackr** tracks a face and outputs the coordinate positions of the face model as an array, following the numbering of the model below:\r\n\r\n[![facemodel_numbering](http://auduno.github.com/clmtrackr/media/facemodel_numbering_new_small.png)](http://auduno.github.com/clmtrackr/media/facemodel_numbering_new.png)\r\n\r\n[Reference](http://auduno.github.io/clmtrackr/docs/reference.html) - [Overview](http://auduno.tumblr.com/post/61888277175/fitting-faces)\r\n\r\nThe library provides some generic face models that were trained on [the MUCT database](http://www.milbo.org/muct/) and some additional self-annotated images. Check out [clmtools](https://github.com/auduno/clmtools) for building your own models.\r\n\r\nThe library requires [jsfeat.js](https://github.com/inspirit/jsfeat) (for initial face detection) and [numeric.js](http://numericjs.com) (for matrix math).\r\n\r\nFor tracking in video, it is recommended to use a browser with WebGL support, though the library should work on any modern browser.\r\n\r\nFor some more information about Constrained Local Models, take a look at Xiaoguang Yan's [excellent tutorial](https://sites.google.com/site/xgyanhome/home/projects/clm-implementation/ConstrainedLocalModel-tutorial%2Cv0.7.pdf?attredirects=0), which was of great help in implementing this library.\r\n\r\n### Examples ###\r\n\r\n* [Tracking in image](https://auduno.github.io/clmtrackr/clm_image.html)\r\n* [Tracking in video](https://auduno.github.io/clmtrackr/clm_video.html)\r\n* [Face substitution](https://auduno.github.io/clmtrackr/examples/facesubstitution.html)\r\n* [Face masking](https://auduno.github.io/clmtrackr/face_mask.html)\r\n* [Realtime face deformation](https://auduno.github.io/clmtrackr/examples/facedeform.html)\r\n* [Emotion detection](https://auduno.github.io/clmtrackr/examples/clm_emotiondetection.html)\r\n* [Caricature](https://auduno.github.io/clmtrackr/examples/caricature.html)\r\n\r\n### Usage ###\r\n\r\nDownload the minified library [clmtrackr.js](https://github.com/auduno/clmtrackr/raw/dev/clmtrackr.js) and one of the models, and include them in your webpage. **clmtrackr** depends on [*numeric.js*](https://github.com/sloisel/numeric/) and [*jsfeat.js*](https://github.com/inspirit/jsfeat), but these are included in the minified library.\r\n\r\n```html\r\n/* clmtrackr libraries */\r\n<script src=\"js/clmtrackr.js\"></script>\r\n<script src=\"js/model_pca_20_svm.js\"></script>\r\n```\r\n\r\nThe following code initiates the clmtrackr with the model we included, and starts the tracker running on a video element.\r\n\r\n```html\r\n<video id=\"inputVideo\" width=\"400\" height=\"300\" autoplay loop>\r\n  <source src=\"./media/somevideo.ogv\" type=\"video/ogg\"/>\r\n</video>\r\n<script type=\"text/javascript\">\r\n  var videoInput = document.getElementById('inputVideo');\r\n  \r\n  var ctracker = new clm.tracker();\r\n  ctracker.init(pModel);\r\n  ctracker.start(videoInput);\r\n</script>\r\n```\r\n\r\nYou can now get the positions of the tracked facial features as an array via ```getCurrentPosition()```:\r\n\r\n```html\r\n<script type=\"text/javascript\">\r\n  function positionLoop() {\r\n    requestAnimationFrame(positionLoop);\r\n    var positions = ctracker.getCurrentPosition();\r\n    // positions = [[x_0, y_0], [x_1,y_1], ... ]\r\n    // do something with the positions ...\r\n  }\r\n  positionLoop();\r\n</script>\r\n```\r\n\r\nYou can also use the built in function ```draw()``` to draw the tracked facial model on a canvas :\r\n\r\n```html\r\n<canvas id=\"drawCanvas\" width=\"400\" height=\"300\"></canvas>\r\n<script type=\"text/javascript\">\r\n  var canvasInput = document.getElementById('canvas');\r\n  var cc = canvasInput.getContext('2d');\r\n  function drawLoop() {\r\n    requestAnimationFrame(drawLoop);\r\n    cc.clearRect(0, 0, canvasInput.width, canvasInput.height);\r\n    ctracker.draw(canvasInput);\r\n  }\r\n  drawLoop();\r\n</script>\r\n```\r\n\r\nSee the complete example [here](https://auduno.github.com/clmtrackr/example.html).\r\n\r\n### License ###\r\n\r\n**clmtrackr** is distributed under the [MIT License](http://www.opensource.org/licenses/MIT)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}